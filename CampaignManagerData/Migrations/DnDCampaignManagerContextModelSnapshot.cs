// <auto-generated />
using System;
using CampaignManagerData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampaignManagerData.Migrations
{
    [DbContext(typeof(DnDCampaignManagerContext))]
    partial class DnDCampaignManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampaignManagerData.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("CharacterID");

                    b.Property<string>("CharacterDescription")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("CharacterName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Coordinates")
                        .HasColumnType("int");

                    b.Property<bool?>("IsPlayerCharacter")
                        .HasColumnType("bit");

                    b.HasKey("CharacterId");

                    b.HasIndex("Coordinates");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CampaignManagerData.Province", b =>
                {
                    b.Property<int>("Coordinates")
                        .HasColumnType("int");

                    b.Property<string>("HiddenFeature")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("ObviousFeature")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("ProvinceName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RandEncounterTableId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TerrainId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TerrainID");

                    b.HasKey("Coordinates")
                        .HasName("PK__Province__1764066FA4A88ED1");

                    b.HasIndex("RandEncounterTableId");

                    b.HasIndex("TerrainId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("CampaignManagerData.RandomEncounter", b =>
                {
                    b.Property<string>("RandEncounterTableId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RandEncounter")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.HasKey("RandEncounterTableId")
                        .HasName("PK__RandomEn__4E4421BCA6E8210A");

                    b.ToTable("RandomEncounters");
                });

            modelBuilder.Entity("CampaignManagerData.TerrainDetail", b =>
                {
                    b.Property<string>("TerrainId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TerrainID");

                    b.Property<string>("TerrainDescription")
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("TerrainTravelSpeed")
                        .HasColumnType("int");

                    b.HasKey("TerrainId")
                        .HasName("PK__TerrainD__79EED1AF3A5CC519");

                    b.ToTable("TerrainDetails");
                });

            modelBuilder.Entity("CampaignManagerData.Character", b =>
                {
                    b.HasOne("CampaignManagerData.Province", "CoordinatesNavigation")
                        .WithMany("Characters")
                        .HasForeignKey("Coordinates")
                        .HasConstraintName("FK__Character__Coord__36B12243")
                        .IsRequired();

                    b.Navigation("CoordinatesNavigation");
                });

            modelBuilder.Entity("CampaignManagerData.Province", b =>
                {
                    b.HasOne("CampaignManagerData.RandomEncounter", "RandEncounterTable")
                        .WithMany("Provinces")
                        .HasForeignKey("RandEncounterTableId")
                        .HasConstraintName("FK__Provinces__RandE__33D4B598");

                    b.HasOne("CampaignManagerData.TerrainDetail", "Terrain")
                        .WithMany("Provinces")
                        .HasForeignKey("TerrainId")
                        .HasConstraintName("FK__Provinces__Terra__32E0915F")
                        .IsRequired();

                    b.Navigation("RandEncounterTable");

                    b.Navigation("Terrain");
                });

            modelBuilder.Entity("CampaignManagerData.Province", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("CampaignManagerData.RandomEncounter", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("CampaignManagerData.TerrainDetail", b =>
                {
                    b.Navigation("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}
